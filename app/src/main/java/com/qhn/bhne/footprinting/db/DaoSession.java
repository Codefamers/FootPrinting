package com.qhn.bhne.footprinting.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.qhn.bhne.footprinting.entries.Note;
import com.qhn.bhne.footprinting.entries.Project;
import com.qhn.bhne.footprinting.entries.User;

import com.qhn.bhne.footprinting.db.NoteDao;
import com.qhn.bhne.footprinting.db.ProjectDao;
import com.qhn.bhne.footprinting.db.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig noteDaoConfig;
    private final DaoConfig projectDaoConfig;
    private final DaoConfig userDaoConfig;

    private final NoteDao noteDao;
    private final ProjectDao projectDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        projectDaoConfig = daoConfigMap.get(ProjectDao.class).clone();
        projectDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        noteDao = new NoteDao(noteDaoConfig, this);
        projectDao = new ProjectDao(projectDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Note.class, noteDao);
        registerDao(Project.class, projectDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        noteDaoConfig.clearIdentityScope();
        projectDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public ProjectDao getProjectDao() {
        return projectDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
